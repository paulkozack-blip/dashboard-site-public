// components/Dashboard.tsx
import React, { useState } from 'react';
import { User, ViewType } from '../types';
import Navbar from './layout/Navbar';
import ChartWrapper from './charts/ChartWrapper';
import './Dashboard.css';

interface DashboardProps {
  currentUser: User | null;
  onLogout: () => void;
  onNavigateToAdmin?: () => void;
}

const Dashboard: React.FC<DashboardProps> = ({
  currentUser,
  onLogout,
  onNavigateToAdmin,
}) => {
  const [selectedGroup, setSelectedGroup] = useState<string | null>(null);

  // –î–û–ë–ê–í–ò–ú –ü–†–û–°–¢–û–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö –î–õ–Ø –í–´–ë–û–†–ê –ì–†–£–ü–ü–´
  const handleGroupSelect = (groupName: string) => {
    console.log(`üìä [Dashboard] –í—ã–±—Ä–∞–Ω–∞ –≥—Ä—É–ø–ø–∞: ${groupName}`);
    setSelectedGroup(groupName);
  };

  const handleViewChange = (view: ViewType) => {
    console.log(`üîÑ [Dashboard] –°–º–µ–Ω–∞ –≤–∏–¥–∞ –Ω–∞: ${view}`);

    if (view === 'admin' && onNavigateToAdmin) {
      onNavigateToAdmin();
    }
  };

  return (
    <div className="dashboard">
      <Navbar
        onGroupSelect={handleGroupSelect} // –ü–ï–†–ï–î–ê–ï–ú –û–ë–†–ê–ë–û–¢–ß–ò–ö
        selectedGroup={selectedGroup}
        currentUser={currentUser}
        onLogout={onLogout}
        onNavigateToDashboard={() => {}} // –ü—É—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è, —Ç–∞–∫ –∫–∞–∫ –º—ã —É–∂–µ –≤ –¥–∞—à–±–æ—Ä–¥–µ
        showAdminButton={true}
        showGroupSelector={true} // –ü–û–ö–ê–ó–´–í–ê–ï–ú –°–ï–õ–ï–ö–¢–û–† –ì–†–£–ü–ü
        currentView="dashboard"
        onViewChange={handleViewChange}
      />

      <div className="dashboard__content">
        {!selectedGroup ? (
          <div className="dashboard-welcome">
            <div className="welcome-message">
              <h2>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ FinDash! üìä</h2>
              <p>–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤</p>
            </div>
          </div>
        ) : (
          <ChartWrapper group={selectedGroup} />
        )}
      </div>
    </div>
  );
};

export default Dashboard;
